{"title":"Linux:远程服务器基本配置","uid":"e11309200b51d3994997c0a4fbb9bd23","slug":"Linux远程服务器基本配置","date":"2023-12-27T12:02:14.000Z","updated":"2023-12-29T04:09:25.592Z","comments":false,"path":"api/articles/Linux远程服务器基本配置.json","keywords":null,"cover":"/cover/Linux远程服务器基本配置.png","content":"<h1 id=\"基本配置\"><a href=\"#基本配置\" class=\"headerlink\" title=\"基本配置\"></a>基本配置</h1><h2 id=\"Linux-远程服务器\"><a href=\"#Linux-远程服务器\" class=\"headerlink\" title=\"Linux 远程服务器\"></a>Linux 远程服务器</h2><h3 id=\"通过跳板机访问内网服务器\"><a href=\"#通过跳板机访问内网服务器\" class=\"headerlink\" title=\"通过跳板机访问内网服务器\"></a>通过跳板机访问内网服务器</h3><p>本地机器的配置详见下面的文件：</p>\n<p>注意<strong>跳板机 IP 地址</strong>和<strong>服务器 IP 地址</strong>不一样，跳板机作用是让本地机器访问内网，因此配置 VPN 这里需要填入<strong>跳板机的 IP 地址</strong>。预共享密钥和密码不是同一个东西，这里我的预共享密钥是 lab505，用户名是 zkyh，密码是 ac3bdf92。密码用于服务器的登录等。</p>\n<p>连接上 vpn 后，用终端连接服务器，这里推进 vscode 的 Remote-SSH 插件，接下来也基于该插件讲解。</p>\n<p align=\"center\"><img src=\"/img/Linux远程服务器基本配置/U9Clbkb2loVoI3xkiEmckkvhnTf.png\"></p>\n\n<p>初次连接时，会要求配置 config 文件，在目录 <code>C:\\Users\\用户名\\.ssh</code> 下，其内容如下：</p>\n<p align=\"center\"><img src=\"/img/Linux远程服务器基本配置/ROjkb2d54ollymxOrZdcPe6wnZI.png\"></p>\n\n<p>Host 和 HostName 都配置成<strong>服务器的 IP 地址，</strong>User 就是用户名 zkyh。选择服务器系统 linux，配置完后完成连接。</p>\n<h3 id=\"ssh-免密登录\"><a href=\"#ssh-免密登录\" class=\"headerlink\" title=\"ssh 免密登录\"></a>ssh 免密登录</h3><p>假设需要使用 Windows 客户机 A 免密登录远程 Linux 服务器 B，其本质就是在 A 上生成 rsa 公私钥对，将公钥添加到服务器 B 上即可。</p>\n<p>生成公私钥：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">ssh-keygen</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-t</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">rsa</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-C</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #C3E88D\">1536454795@qq.com</span><span style=\"color: #89DDFF\">\"</span></span></code></pre></div><p>与后面 git 内容保持一致，一般用邮箱进行注释，执行命令后需要进行 3 次或 4 次确认：</p>\n<p align=\"center\"><img src=\"/img/Linux远程服务器基本配置/DrFMbQRWToV6MQxAc0rcFOBonXb.png\"></p>\n\n<p>在 B 的~/.ssh/目录下输入命令：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># ID_RSA.PUB是A上的公钥id_rsa.pub的内容，将该内容追加进文件authorized_keys（没有该文件会新建）</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">echo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #C3E88D\">ID_RSA.PUB</span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">authorized_keys</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">echo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #C3E88D\">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCoJkMyoTQ58Bn9EXzzesPI9GCifSwhoJy+wzsrG7hGqQ1FtdZ/kzxWypO5rbmp7MNb7LP/01bINI/I1n2bF6N6eA0tJglN9i100t21TsmfuWe6X+FyTj7qyLX2rpeAa3O6n+XoklGtMsIZATMx8Jw4LPZYEq46I9l191kt/QSO6eNE3U+KLhvFXAzS/6Ok8ay9Qo4JXTaUjJCocTCMHpZsq1rw8OMowQUAtKyjRMZvHPg5QLyGAypAWWIn6yNH1aiU4OyyOJjOD8u3gg/44dqbFiiV7JT++zM7JwHD4HlkoO0/5D6n8NPI+PMtXcfTDHVjAekj44KaomIoYpG2vqMGUztyI46qQGmJGC/RZTtMDjZMB6l+i1ZlZ4Wck/hIZiiuzHaWnXBZBsNgfxKdOPWQYRx1rtl8awHICvd2XFteFw8xyzHHrH9SqZwSYM5ImuJWLxwPzMKZsVmRvQ50ICKfOYjjHyl60m5PUV8S7d1BzT1uMOPJqPpEHf4PfoA75rU= 1536454795@qq.com</span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">authorized_keys</span></span></code></pre></div><h3 id=\"文件传输\"><a href=\"#文件传输\" class=\"headerlink\" title=\"文件传输\"></a>文件传输</h3><p>文件传输有许多方法，如果本地机器有图形化界面，推荐使用 vscode 进行传输，否则还是基于 ssh 加密的两种方法：<code>scp</code> 和 <code>sftp</code>。本次 terminal 中的命令示例都是基于本地服务器 Windows 和远程服务器为 Linux 的情况，可以从命令中路径的间隔符判别是 Windows 的路径还是 Linux 的路径（Windows 是反斜杠 <code>\\</code>，Linux 是正斜杠 <code>/</code>）。所有 terminal 的命令都是在 Windows 上发起的，因此 Windows 路径都是相对 terminal 工作目录的，而 Linux 则是相对用户目录 <code>~</code> 的。</p>\n<p>指定远程 Linux 服务器都会使用**&lt; 用户名 &gt;@&lt;IP 地址 &gt;**的形式，本小节遵循该方式。</p>\n<p>本小节分大文件和小文件的传输讨论传输手段，由于内网穿透原因，大文件的传输可能不稳定。如何界定大文件和小文件本身是一件模糊的事情，这里经过本人的实验，小于等于 512MB 的文件是可以通过 scp 稳定传输的 ，因此认为是小文件，大于 512MB 的文件传输不稳定，认为是大文件。<strong>注意大文件小文件的界定是根据网络情况来的</strong>，如果没有内网穿透可能不存在传输不稳定问题。</p>\n<h4 id=\"小文件的传输\"><a href=\"#小文件的传输\" class=\"headerlink\" title=\"小文件的传输\"></a>小文件的传输</h4><p>文件传输建立在上述 <strong>ssh 免密登录</strong>的前提下，使用 scp 命令进行文件的拷贝：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">**</span><span style=\"color: #BABED8\">scp</span><span style=\"color: #89DDFF\">**</span><span style=\"color: #BABED8\"> -r file zkyh@10.77.110.155:upload/</span></span></code></pre></div><ul>\n<li><code>file</code> 代表待上传的文件或文件夹</li>\n<li><code>-r</code> 代表允许传输文件夹</li>\n<li><code>zkyh</code> 代表用户名</li>\n<li><code>10.77.110.155</code> 代表服务器 IP 地址</li>\n<li><code>upload</code> 代表相对于 <code>~</code> 的上传位置（目标路径）</li>\n</ul>\n<p>相应地，将服务器上的文件（夹）下载至本机即可使用下面的命令：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">**</span><span style=\"color: #BABED8\">scp</span><span style=\"color: #89DDFF\">**</span><span style=\"color: #BABED8\"> -r zkyh@10.77.110.155:file download\\</span></span></code></pre></div><ul>\n<li><code>file</code> 代表相对于 <code>~</code> 的待下载文件（夹）</li>\n<li><code>-r</code> 代表允许传输文件夹</li>\n<li><code>zkyh</code> 代表用户名</li>\n<li><code>10.77.110.155</code> 代表服务器 IP 地址</li>\n<li><code>.\\download</code> 代表下载到本机的目录</li>\n</ul>\n<h4 id=\"大文件的传输\"><a href=\"#大文件的传输\" class=\"headerlink\" title=\"大文件的传输\"></a>大文件的传输</h4><p>大文件的传输推荐使用 sftp 命令（没有试过 scp，应该也可以），需要先建立 sftp 连接，再使用 put 和 get 方法进行文件的传输：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 建立sftp连接</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">**</span><span style=\"color: #BABED8\">sftp</span><span style=\"color: #89DDFF\">**</span><span style=\"color: #BABED8\"> zkyh@10.77.110.155</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 使用put上传文件，上传file到Linux的upload目录</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">**</span><span style=\"color: #BABED8\">put</span><span style=\"color: #89DDFF\">**</span><span style=\"color: #BABED8\"> -r file upload/</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 使用get下载文件，下载file到Windows的download目录</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">**</span><span style=\"color: #BABED8\">get</span><span style=\"color: #89DDFF\">**</span><span style=\"color: #BABED8\"> -r file download\\</span></span></code></pre></div><p>值得注意的是 sftp 是支持断点续传的，因此网络不稳定，出现 broken pipe 的错误也没有问题，只需要重新建立 sftp 连接，使用 reput/reget 命令即可：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 建立sftp连接</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">**</span><span style=\"color: #BABED8\">sftp</span><span style=\"color: #89DDFF\">**</span><span style=\"color: #BABED8\"> zkyh@10.77.110.155</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 使用reput实现断点续传</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">**</span><span style=\"color: #BABED8\">reput</span><span style=\"color: #89DDFF\">**</span><span style=\"color: #BABED8\"> -r file upload/</span></span></code></pre></div><p>可以看下面的示例：</p>\n<p align=\"center\"><img src=\"/img/Linux远程服务器基本配置/I8OIbvx5koCq6XxNOa1cUoa8n8b.png\"></p>\n\n<h4 id=\"vscode-直接拖拽\"><a href=\"#vscode-直接拖拽\" class=\"headerlink\" title=\"vscode 直接拖拽\"></a>vscode 直接拖拽</h4><p>直接基于 GUI 的方式将文件（可以是大文件）拖入已经建立 ssh 连接的 vscode 文件导航栏中，vscode 会在后台完成复制。这种方式似乎只能由客户端向服务端上传文件/文件夹，但是连接比较稳定。</p>\n<h4 id=\"文件暂存网站\"><a href=\"#文件暂存网站\" class=\"headerlink\" title=\"文件暂存网站\"></a>文件暂存网站</h4><p>国内国外有许多提供文件暂存服务的网站，这是一个文件传输的很好的中转站，其对于拥有图形化界面拥有浏览器的 Linux 系统比较方便，但是若没有图形化界面，似乎不可用：因为这些网站的上传下载都是基于 javascript 的，需要自行写请求体。至于能否使用 curl、wget 等下载工具去下载还有待研究。</p>\n<p>使用 aria2 进行下载：</p>\n<h3 id=\"使用-vscode-进行服务器端开发\"><a href=\"#使用-vscode-进行服务器端开发\" class=\"headerlink\" title=\"使用 vscode 进行服务器端开发\"></a>使用 vscode 进行服务器端开发</h3><p>除了上述使用 vscode 连接远程服务器，vscode 还可以进行服务器端的开发，只需要在服务器端安装插件即可：</p>\n<p align=\"center\"><img src=\"/img/Linux远程服务器基本配置/OBTqbJQdloelZxxAFuPcdifPnpf.png\"></p>\n\n<p>上述图中的 <code>LOCAL-INSTALLED</code> 表示的是本地的插件，可以点击 <code>Install in SSH：10.77.110.155</code> 安装到服务器端，这样在下面的 <code>SSH：10.77.110.155-INSTALLED</code> 能够显示。</p>\n<p>ssh 连接后，vscode 的插件的运算负载就会被放在服务器上而不是本地，甚至 vscode 本身的一些功能，比如左侧栏的全局替换和全局搜索，负责实际去计算的也是服务器。</p>\n<h2 id=\"其他网络问题\"><a href=\"#其他网络问题\" class=\"headerlink\" title=\"其他网络问题\"></a>其他网络问题</h2><h3 id=\"虚拟机“掉网”\"><a href=\"#虚拟机“掉网”\" class=\"headerlink\" title=\"虚拟机“掉网”\"></a>虚拟机“掉网”</h3><p>有时候虚拟机会在某次开启后，无法连接互联网，这个现象我个人称之为“掉网”，从经验的角度来看，出现了一次“掉网”后频繁发生。原因未明，重新安装虚拟机可能永久解决这一现象，暂时解决可以允许下面的脚本：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#!/bin/bash</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">service</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">network-manager</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">stop</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">cp</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">/var/lib/NetworkManager/NetworkManager.state</span><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">/var/lib/NetworkManager/NetworkManager.state.back</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">rm</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">/var/lib/NetworkManager/NetworkManager.state</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">service</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">network-manager</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">start</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 如果不能联网就重启一下</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">reboot</span></span></code></pre></div>","feature":true,"text":"这篇文章详细介绍了如何在本地计算机和远程Linux服务器之间进行高效稳定的文件传输，提供了多种方法，如VPN跳板机访问内网服务器、ssh免密登录和文件传输等。同时，文章还解释了如何使用VSCode进行拖拽式文件传输，并建议使用ssh连接的服务器端开发。此外，文章还涉及了其他网络问题的解决方案。...","permalink":"/post/Linux远程服务器基本配置","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"工程技术","slug":"工程技术","count":3,"path":"api/categories/工程技术.json"}],"tags":[{"name":"远程服务器","slug":"远程服务器","count":1,"path":"api/tags/远程服务器.json"},{"name":"Markdown","slug":"Markdown","count":1,"path":"api/tags/Markdown.json"},{"name":"文件传输","slug":"文件传输","count":1,"path":"api/tags/文件传输.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">基本配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Linux-%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8\"><span class=\"toc-text\">Linux 远程服务器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%9A%E8%BF%87%E8%B7%B3%E6%9D%BF%E6%9C%BA%E8%AE%BF%E9%97%AE%E5%86%85%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8\"><span class=\"toc-text\">通过跳板机访问内网服务器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ssh-%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95\"><span class=\"toc-text\">ssh 免密登录</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93\"><span class=\"toc-text\">文件传输</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B0%8F%E6%96%87%E4%BB%B6%E7%9A%84%E4%BC%A0%E8%BE%93\"><span class=\"toc-text\">小文件的传输</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%A7%E6%96%87%E4%BB%B6%E7%9A%84%E4%BC%A0%E8%BE%93\"><span class=\"toc-text\">大文件的传输</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#vscode-%E7%9B%B4%E6%8E%A5%E6%8B%96%E6%8B%BD\"><span class=\"toc-text\">vscode 直接拖拽</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E6%9A%82%E5%AD%98%E7%BD%91%E7%AB%99\"><span class=\"toc-text\">文件暂存网站</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-vscode-%E8%BF%9B%E8%A1%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E5%BC%80%E5%8F%91\"><span class=\"toc-text\">使用 vscode 进行服务器端开发</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96%E7%BD%91%E7%BB%9C%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">其他网络问题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%99%9A%E6%8B%9F%E6%9C%BA%E2%80%9C%E6%8E%89%E7%BD%91%E2%80%9D\"><span class=\"toc-text\">虚拟机“掉网”</span></a></li></ol></li></ol></li></ol>","author":{"name":"Lucas Zhang","slug":"blog-author","avatar":"/img/refrain.jpg","link":"/","description":"<p>夜阑卧听风吹雨</p>Over The Hill.","socials":{"github":"https://github.com/FailureJack","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/13432006?spm_id_from=333.337.0.0"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/failurer"},"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/failurejack"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/failurer/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"gem5 基本部署","uid":"85dc162ae8f3c2b9bfa480ee7525dc8d","slug":"gem5 基本部署","date":"2023-12-29T07:09:04.000Z","updated":"2023-12-29T07:09:04.924Z","comments":true,"path":"api/articles/gem5 基本部署.json","keywords":null,"cover":"/cover/gem5 基本部署.png","text":"这篇文章主要介绍了在Ubuntu上部署gem5的方法，包括系统调用和全系统模拟两种模式。详细讲述了如何搭建环境、安装依赖、克隆源码、编译源码、检验是否成功、解决内存不足问题和全系统模式搭建等内容。此外，文章还给出了详细的参数设置和组件安装流程，适合gem5初学者阅读参考。...","permalink":"/post/gem5 基本部署","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"工程技术","slug":"工程技术","count":3,"path":"api/categories/工程技术.json"}],"tags":[{"name":"Gem5","slug":"Gem5","count":1,"path":"api/tags/Gem5.json"}],"author":{"name":"Lucas Zhang","slug":"blog-author","avatar":"/img/refrain.jpg","link":"/","description":"<p>夜阑卧听风吹雨</p>Over The Hill.","socials":{"github":"https://github.com/FailureJack","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/13432006?spm_id_from=333.337.0.0"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/failurer"},"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/failurejack"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/failurer/"}}}},"feature":true},"next_post":{"title":"pimDB:From Main-Memory DBMS to Processing-In-Memory DBMS-Engines on Intelligent Memories","uid":"af9363059dee9d3cec07c0eec58cd7d5","slug":"pimDB  From Main-Memory DBMS to Processing-In-Memory DBMS-Engines on Intelligent Memories","date":"2023-11-28T11:02:22.098Z","updated":"2023-12-29T04:09:25.593Z","comments":true,"path":"api/articles/pimDB  From Main-Memory DBMS to Processing-In-Memory DBMS-Engines on Intelligent Memories.json","keywords":null,"cover":"/cover/pimDB  From Main-Memory DBMS to Processing-In-Memory DBMS-Engines on Intelligent Memories.png","text":"研究内存数据库的处理方法，探讨布局、层次和迁移对性能的影响，结果提高计算效率，同时研究页面布局、内存层次和迁移对性能的影响。...","permalink":"/post/pimDB  From Main-Memory DBMS to Processing-In-Memory DBMS-Engines on Intelligent Memories","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[{"name":"工程技术","slug":"工程技术","count":3,"path":"api/categories/工程技术.json"}],"tags":[{"name":"页面布局","slug":"页面布局","count":1,"path":"api/tags/页面布局.json"},{"name":"内存层次结构","slug":"内存层次结构","count":1,"path":"api/tags/内存层次结构.json"},{"name":"数据迁移","slug":"数据迁移","count":1,"path":"api/tags/数据迁移.json"}],"author":{"name":"Lucas Zhang","slug":"blog-author","avatar":"/img/refrain.jpg","link":"/","description":"<p>夜阑卧听风吹雨</p>Over The Hill.","socials":{"github":"https://github.com/FailureJack","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/13432006?spm_id_from=333.337.0.0"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/failurer"},"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/failurejack"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/failurer/"}}}},"feature":true}}